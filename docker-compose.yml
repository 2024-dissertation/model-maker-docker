services:
  golang:
    image: golang:latest
    build:
      context: ./app
      dockerfile: Dockerfile
    volumes:
      - ./app:/app
    working_dir: /app
    depends_on:
      - db
    networks:
      - db
    command: tail -f /dev/null

  db:
    image: postgres:latest
    build:
      context: ./docker/db
      dockerfile: Dockerfile
    environment:
      - TZ=${TIMEZONE}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_NAMESPACE=auth
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - db
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - db
    depends_on:
      - db
    restart: unless-stopped

  caddy:
    image: caddy
    restart: unless-stopped
    environment:
      SERVER_NAME: ${SERVER_NAME:-:80}
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./docker/caddy/data:/data
      - ./docker/caddy/config:/config
    networks:
      db:
        aliases:
          - db.soupmodelmaker.local
          - soupmodelmaker.local
          - api.local

volumes:
  postgres_data:
  pgadmin:

networks:
  db:
