services:
  golang:
    image: golang:latest
    container_name: go_dev
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    ports:
      - "3333:3333"
    volumes:
      - ./app:/app
    working_dir: /app
    depends_on:
      - db
    networks:
      - db
    command: tail -F /dev/null

  db:
    image: postgres:latest
    container_name: postgres_db
    build:
      context: ./db
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=appdb
      - DB_NAMESPACE=auth
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
      - PGDATA=/data/postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - db
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - db
    depends_on:
      - db
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin:

networks:
  db:
    driver: bridge